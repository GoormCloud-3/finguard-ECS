extensions:
  health_check: {}
  sigv4auth:
    region: ${env:AWS_REGION}

receivers:
  prometheus:
    config:
      global:
        scrape_interval: 30s
      scrape_configs:
        - job_name: account-service
          static_configs:
            - targets: [ "account-service:${env:METRICS_PORT}" ]
          metrics_path: /metrics

        - job_name: sqs-service
          static_configs:
            - targets: [ "sqs-service:${env:METRICS_PORT}" ]
          metrics_path: /metrics

        - job_name: user-service
          static_configs:
            - targets: [ "user-service:${env:METRICS_PORT}" ]
          metrics_path: /metrics

        - job_name: transaction-service
          static_configs:
            - targets: [ "transaction-service:${env:METRICS_PORT}" ]
          metrics_path: /metrics

        - job_name: fcm-service
          static_configs:
            - targets: [ "fcm-service:${env:METRICS_PORT}" ]
          metrics_path: /metrics


processors:
  resourcedetection:
    detectors: [env, ecs]
    timeout: 2s
  batch: {}

exporters:
  awsxray: {}
  prometheusremotewrite:
    endpoint: https://aps-workspaces.${env:AWS_REGION}.amazonaws.com/workspaces/${env:AMP_WORKSPACE_ID}/api/v1/remote_write
    auth:
      authenticator: sigv4auth
    tls:
      insecure_skip_verify: true
    external_labels:
      cluster: ecs-cluster
  debug: {}

service:
  telemetry:
    logs:
      level: warn
  extensions: [health_check, sigv4auth]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection, batch]
      exporters: [awsxray]
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite, debug]
