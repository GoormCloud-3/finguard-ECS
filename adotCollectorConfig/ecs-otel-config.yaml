extensions:
  health_check:
  sigv4auth:
    region: ${AWS_REGION}

receivers:
  otlp:
    protocols:
      grpc: { endpoint: 0.0.0.0:4317 }
      http: { endpoint: 0.0.0.0:4318 }
  prometheus:
    config:
      scrape_configs:
        - job_name: app
          scrape_interval: 15s
          static_configs:
            - targets: ["127.0.0.1:8000"]  # 예: 8000
          metrics_path: /metrics
  awsecscontainermetrics: {}

processors:
  batch:
  resourcedetection:
    detectors: [env, ecs]
  resource:
    attributes:
      - key: service.namespace
        action: upsert
        value: ${SERVICE_NAMESPACE}
      - key: deployment.environment
        action: upsert
        value: ${DEPLOY_ENV}

exporters:
  awsxray: 
    region: ${AWS_REGION}                # 트레이스 → X-Ray
  prometheusremotewrite:     # 메트릭 → AMP
    endpoint: https://aps-workspaces.${AWS_REGION}.amazonaws.com/workspaces/${AMP_WORKSPACE_ID}/api/v1/remote_write
    auth:
      authenticator: sigv4auth
  awscloudwatchlogs:         # (선택) 로그 → CloudWatch Logs
    log_group_name: /ecs/app-otlp-logs
    log_stream_name: adot-collector
    region: ${AWS_REGION}

service:
  extensions: [health_check, sigv4auth]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection, resource, batch]
      exporters: [awsxray]
    metrics:
      receivers: [otlp, prometheus, awsecscontainermetrics]
      processors: [resourcedetection, resource, batch]
      exporters: [prometheusremotewrite]
    logs:
      receivers: [otlp]
      processors: [resourcedetection, resource, batch]
      exporters: [awscloudwatchlogs]
